/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.farmsys.UI;

import com.farmsys.DTO.NhanVien;
import com.farmsys.Helper.Auth;
import com.farmsys.Helper.MsgBox;
import com.farmsys.dao.NhanVienDAO;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BarcodeFormat;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.EncodeHintType;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.MultiFormatWriter;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.client.j2se.MatrixToImageWriter;
import com.google.zxing.common.BitMatrix;
import com.google.zxing.common.HybridBinarizer;
import com.google.zxing.qrcode.decoder.ErrorCorrectionLevel;
import jaco.mp3.player.MP3Player;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.Properties;
import java.util.UUID;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeBodyPart;
import javax.mail.internet.MimeMessage;
import javax.mail.internet.MimeMultipart;

/**
 *
 * @author trieu
 */
public class DangNhapJDialog extends javax.swing.JDialog implements Runnable, ThreadFactory {

    /**
     * Creates new form DangNhapJDialog
     *
     * @param parent
     * @param modal
     */
    public DangNhapJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();

    }
    NhanVienDAO dao = new NhanVienDAO();
    NhanVien nv = new NhanVien();
    private String OTP;
    private final String accountName = "farmsys.contact@gmail.com";
    private final String accountPassword = "FarmSys@123456";
    private String manv;
    private String manvotp;
    private String emailNV;
    private String tempOTP;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        doimkJDialog = new javax.swing.JDialog();
        pnldieukhien = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        pnlTong1 = new javax.swing.JPanel();
        Pnlnhap1 = new javax.swing.JPanel();
        txttaikhoanlaymk = new javax.swing.JTextField();
        txtmknew = new javax.swing.JPasswordField();
        btndoimk = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        lblquaylaidangnhap = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        txtOTP = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JSeparator();
        txtxnmknew = new javax.swing.JPasswordField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        welcomeJDialog = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        pn2 = new javax.swing.JLabel();
        pn1 = new javax.swing.JLabel();
        pn3 = new javax.swing.JLabel();
        pn4 = new javax.swing.JLabel();
        welcom = new javax.swing.JLabel();
        WebcamQRcode = new javax.swing.JFrame();
        panelquetqr = new javax.swing.JPanel();
        jSeparator8 = new javax.swing.JSeparator();
        panelquetQR = new javax.swing.JPanel();
        pnldieukhien1 = new javax.swing.JPanel();
        lblExit = new javax.swing.JLabel();
        lbltieude = new javax.swing.JLabel();
        pnlTong = new javax.swing.JPanel();
        Pnlnhap = new javax.swing.JPanel();
        txtMaNV = new javax.swing.JTextField();
        txtMatKhau = new javax.swing.JPasswordField();
        btnDangNhap = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        lblquenmk = new javax.swing.JLabel();
        lblloginwwithQR = new javax.swing.JLabel();
        lbllogo = new javax.swing.JLabel();
        txtQRcode = new javax.swing.JTextField();

        doimkJDialog.setMinimumSize(new java.awt.Dimension(950, 500));
        doimkJDialog.setModal(true);
        doimkJDialog.setUndecorated(true);
        doimkJDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnldieukhien.setBackground(new java.awt.Color(0, 0, 0));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/close_window_16px.png"))); // NOI18N
        jLabel9.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel9MouseClicked(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(255, 255, 255));
        jLabel14.setText("Change Password FarmSys");

        javax.swing.GroupLayout pnldieukhienLayout = new javax.swing.GroupLayout(pnldieukhien);
        pnldieukhien.setLayout(pnldieukhienLayout);
        pnldieukhienLayout.setHorizontalGroup(
            pnldieukhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldieukhienLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 763, Short.MAX_VALUE)
                .addComponent(jLabel9))
        );
        pnldieukhienLayout.setVerticalGroup(
            pnldieukhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldieukhienLayout.createSequentialGroup()
                .addGroup(pnldieukhienLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        doimkJDialog.getContentPane().add(pnldieukhien, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 30));

        pnlTong1.setBackground(new java.awt.Color(150, 250, 150));
        pnlTong1.setMinimumSize(new java.awt.Dimension(950, 470));
        pnlTong1.setPreferredSize(new java.awt.Dimension(950, 470));
        pnlTong1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Pnlnhap1.setBackground(new java.awt.Color(255, 255, 255));

        txttaikhoanlaymk.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txttaikhoanlaymk.setForeground(new java.awt.Color(51, 51, 51));
        txttaikhoanlaymk.setBorder(null);

        txtmknew.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtmknew.setForeground(new java.awt.Color(51, 51, 51));
        txtmknew.setBorder(null);

        btndoimk.setBackground(new java.awt.Color(153, 255, 153));
        btndoimk.setText("Đổi mật khẩu");
        btndoimk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btndoimkActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 230, 0));
        jLabel5.setText("Tài khoản");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 230, 0));
        jLabel10.setText("Mật khẩu mới");

        lblquaylaidangnhap.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblquaylaidangnhap.setText("Đăng nhập");
        lblquaylaidangnhap.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblquaylaidangnhapMouseExited(evt);
            }
        });

        txtOTP.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtOTP.setForeground(new java.awt.Color(51, 51, 51));
        txtOTP.setBorder(null);
        txtOTP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtOTPKeyPressed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(0, 230, 0));
        jLabel15.setText("OTP");

        jButton2.setBackground(new java.awt.Color(153, 255, 153));
        jButton2.setText("GET OTP");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        txtxnmknew.setFont(new java.awt.Font("Comic Sans MS", 0, 18)); // NOI18N
        txtxnmknew.setForeground(new java.awt.Color(51, 51, 51));
        txtxnmknew.setBorder(null);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 230, 0));
        jLabel16.setText("Xác nhận mật khẩu mới");

        javax.swing.GroupLayout Pnlnhap1Layout = new javax.swing.GroupLayout(Pnlnhap1);
        Pnlnhap1.setLayout(Pnlnhap1Layout);
        Pnlnhap1Layout.setHorizontalGroup(
            Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pnlnhap1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(441, 441, 441))
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addComponent(txttaikhoanlaymk, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(Pnlnhap1Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(240, 240, 240))
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Pnlnhap1Layout.createSequentialGroup()
                                .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(Pnlnhap1Layout.createSequentialGroup()
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addGap(16, 16, 16))
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btndoimk, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButton2)
                                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 397, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(1, 1, 1)))
                                .addComponent(txtmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtxnmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblquaylaidangnhap))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        Pnlnhap1Layout.setVerticalGroup(
            Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Pnlnhap1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txttaikhoanlaymk, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtOTP, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel15))
                .addGroup(Pnlnhap1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addGap(113, 113, 113)
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(189, Short.MAX_VALUE))
                    .addGroup(Pnlnhap1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addGap(1, 1, 1)
                        .addComponent(txtmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtxnmknew, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator6, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btndoimk, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(lblquaylaidangnhap)
                        .addGap(22, 22, 22))))
        );

        Pnlnhap1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtOTP, txtmknew, txttaikhoanlaymk, txtxnmknew});

        pnlTong1.add(Pnlnhap1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 450, 470));

        jLabel17.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/logofarmSys.gif"))); // NOI18N
        pnlTong1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 0, 510, 470));

        doimkJDialog.getContentPane().add(pnlTong1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 950, 470));

        welcomeJDialog.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Path 2.png"))); // NOI18N
        jPanel1.add(pn2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, -9, 460, 380));

        pn1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Path 1.png"))); // NOI18N
        jPanel1.add(pn1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -30, 480, 340));

        pn3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Path 4.png"))); // NOI18N
        jPanel1.add(pn3, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 460, 340));

        pn4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/Path 5.png"))); // NOI18N
        jPanel1.add(pn4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 610, 300));

        welcom.setFont(new java.awt.Font("Forte", 1, 36)); // NOI18N
        welcom.setText("Welcome to FarmSys");
        jPanel1.add(welcom, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 180, 350, 80));

        welcomeJDialog.getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 650, 460));

        WebcamQRcode.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        WebcamQRcode.setAlwaysOnTop(true);
        WebcamQRcode.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        WebcamQRcode.setMinimumSize(new java.awt.Dimension(500, 380));
        WebcamQRcode.setUndecorated(true);

        panelquetqr.setBackground(new java.awt.Color(255, 255, 255));
        panelquetqr.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator8.setForeground(new java.awt.Color(126, 167, 206));
        panelquetqr.add(jSeparator8, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 360, 470, 10));

        panelquetQR.setBackground(new java.awt.Color(250, 250, 250));
        panelquetQR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(230, 230, 230)));
        panelquetQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                panelquetQRMouseClicked(evt);
            }
        });
        panelquetQR.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        panelquetqr.add(panelquetQR, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 470, 300));

        javax.swing.GroupLayout WebcamQRcodeLayout = new javax.swing.GroupLayout(WebcamQRcode.getContentPane());
        WebcamQRcode.getContentPane().setLayout(WebcamQRcodeLayout);
        WebcamQRcodeLayout.setHorizontalGroup(
            WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 500, Short.MAX_VALUE)
            .addGroup(WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WebcamQRcodeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelquetqr, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        WebcamQRcodeLayout.setVerticalGroup(
            WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 380, Short.MAX_VALUE)
            .addGroup(WebcamQRcodeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(WebcamQRcodeLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(panelquetqr, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(950, 500));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnldieukhien1.setBackground(new java.awt.Color(0, 0, 0));

        lblExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/close_window_16px.png"))); // NOI18N
        lblExit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblExitMouseClicked(evt);
            }
        });

        lbltieude.setFont(new java.awt.Font("Comic Sans MS", 1, 12)); // NOI18N
        lbltieude.setForeground(new java.awt.Color(255, 255, 255));
        lbltieude.setText("Login FarmSys");

        javax.swing.GroupLayout pnldieukhien1Layout = new javax.swing.GroupLayout(pnldieukhien1);
        pnldieukhien1.setLayout(pnldieukhien1Layout);
        pnldieukhien1Layout.setHorizontalGroup(
            pnldieukhien1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldieukhien1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbltieude)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 832, Short.MAX_VALUE)
                .addComponent(lblExit))
        );
        pnldieukhien1Layout.setVerticalGroup(
            pnldieukhien1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnldieukhien1Layout.createSequentialGroup()
                .addGroup(pnldieukhien1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblExit, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
                    .addComponent(lbltieude, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(2, 2, 2))
        );

        getContentPane().add(pnldieukhien1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 950, 30));

        pnlTong.setBackground(new java.awt.Color(150, 250, 150));
        pnlTong.setMinimumSize(new java.awt.Dimension(950, 470));
        pnlTong.setPreferredSize(new java.awt.Dimension(950, 470));
        pnlTong.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Pnlnhap.setBackground(new java.awt.Color(255, 255, 255));

        txtMaNV.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMaNV.setBorder(null);
        txtMaNV.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtMaNVFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMaNVFocusLost(evt);
            }
        });
        txtMaNV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaNVActionPerformed(evt);
            }
        });
        txtMaNV.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMaNVKeyPressed(evt);
            }
        });

        txtMatKhau.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtMatKhau.setBorder(null);
        txtMatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMatKhauKeyPressed(evt);
            }
        });

        btnDangNhap.setBackground(new java.awt.Color(153, 255, 153));
        btnDangNhap.setText("ĐĂNG NHẬP");
        btnDangNhap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangNhapActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 230, 0));
        jLabel1.setText("Login");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 230, 0));
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 230, 0));
        jLabel3.setText("Mật khẩu");

        lblquenmk.setFont(new java.awt.Font("Lucida Grande", 0, 18)); // NOI18N
        lblquenmk.setText("Quên mật khẩu?");
        lblquenmk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblquenmkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblquenmkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblquenmkMouseExited(evt);
            }
        });

        lblloginwwithQR.setFont(new java.awt.Font("Comic Sans MS", 0, 10)); // NOI18N
        lblloginwwithQR.setText("Login with QR code");
        lblloginwwithQR.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblloginwwithQRMouseExited(evt);
            }
        });

        javax.swing.GroupLayout PnlnhapLayout = new javax.swing.GroupLayout(Pnlnhap);
        Pnlnhap.setLayout(PnlnhapLayout);
        PnlnhapLayout.setHorizontalGroup(
            PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PnlnhapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PnlnhapLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(381, 381, 381))
                    .addGroup(PnlnhapLayout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(294, 294, 294))
                    .addGroup(PnlnhapLayout.createSequentialGroup()
                        .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PnlnhapLayout.createSequentialGroup()
                                .addGap(4, 4, 4)
                                .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel3)
                                        .addComponent(txtMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 366, Short.MAX_VALUE)
                                        .addComponent(jSeparator1)
                                        .addComponent(jSeparator2)
                                        .addComponent(btnDangNhap, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(PnlnhapLayout.createSequentialGroup()
                                        .addComponent(lblquenmk, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(lblloginwwithQR, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))))
            .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlnhapLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel6)
                        .addComponent(jLabel7))
                    .addContainerGap(459, Short.MAX_VALUE)))
        );
        PnlnhapLayout.setVerticalGroup(
            PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PnlnhapLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(30, 30, 30)
                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaNV, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMatKhau, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 10, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(btnDangNhap, javax.swing.GroupLayout.DEFAULT_SIZE, 45, Short.MAX_VALUE)
                .addGap(59, 59, 59)
                .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblquenmk, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblloginwwithQR, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(54, 54, 54))
            .addGroup(PnlnhapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(PnlnhapLayout.createSequentialGroup()
                    .addContainerGap(248, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(50, 50, 50)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(95, 95, 95)))
        );

        pnlTong.add(Pnlnhap, new org.netbeans.lib.awtextra.AbsoluteConstraints(499, 0, 460, 470));

        lbllogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/farmsys/icons/logofarmSys.gif"))); // NOI18N
        pnlTong.add(lbllogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 500, 470));
        pnlTong.add(txtQRcode, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        getContentPane().add(pnlTong, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, -1, 470));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDangNhapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangNhapActionPerformed
        this.dangNhap();
    }//GEN-LAST:event_btnDangNhapActionPerformed

    private void txtMatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMatKhauKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dangNhap();
        }
    }//GEN-LAST:event_txtMatKhauKeyPressed

    private void txtMaNVKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMaNVKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            this.dangNhap();
        }
    }//GEN-LAST:event_txtMaNVKeyPressed

    private void txtMaNVFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusGained
        if (txtMaNV.getText().equalsIgnoreCase("Nhập tên đăng nhập hoặc Email")) {
            txtMaNV.setText("");
            txtMaNV.setForeground(Color.BLACK);
            txtMatKhau.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txtMaNVFocusGained

    private void txtMaNVFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMaNVFocusLost
        if (txtMaNV.getText().length() == 0) {
            txtMaNV.setText("Nhập tên đăng nhập hoặc Email");
            txtMaNV.setForeground(Color.gray);

        }
    }//GEN-LAST:event_txtMaNVFocusLost

    private void lblquenmkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseClicked
        Ping3.play();
        doimkJDialog.setVisible(true);
    }//GEN-LAST:event_lblquenmkMouseClicked

    private void btndoimkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btndoimkActionPerformed
        this.doiMatKhau(manvotp);
    }//GEN-LAST:event_btndoimkActionPerformed

    private void lblquaylaidangnhapMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseClicked
        doimkJDialog.setVisible(false);
        Ping3.play();
    }//GEN-LAST:event_lblquaylaidangnhapMouseClicked

    private void txtOTPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtOTPKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOTPKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.SendOTP();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void txtMaNVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaNVActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaNVActionPerformed

    private void jLabel9MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel9MouseClicked
        this.Closelogin();
    }//GEN-LAST:event_jLabel9MouseClicked

    private void lblExitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblExitMouseClicked
        this.Closelogin();
    }//GEN-LAST:event_lblExitMouseClicked

    private void lblquenmkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseEntered
        lblquenmk.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblquenmkMouseEntered

    private void lblquenmkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquenmkMouseExited
        lblquenmk.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblquenmkMouseExited

    private void lblquaylaidangnhapMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseEntered
        lblquaylaidangnhap.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblquaylaidangnhapMouseEntered

    private void lblquaylaidangnhapMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblquaylaidangnhapMouseExited
        lblquaylaidangnhap.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblquaylaidangnhapMouseExited

    private void lblloginwwithQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseClicked
        initWebcam(true);
        WebcamQRcode.setVisible(true);
    }//GEN-LAST:event_lblloginwwithQRMouseClicked

    private void lblloginwwithQRMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseEntered
        lblloginwwithQR.setForeground(new Color(0, 230, 0));
    }//GEN-LAST:event_lblloginwwithQRMouseEntered

    private void lblloginwwithQRMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblloginwwithQRMouseExited
        lblloginwwithQR.setForeground(Color.BLACK);
    }//GEN-LAST:event_lblloginwwithQRMouseExited

    private void panelquetQRMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelquetQRMouseClicked
        WebcamQRcode.setVisible(false);
    }//GEN-LAST:event_panelquetQRMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DangNhapJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                DangNhapJDialog dialog = new DangNhapJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Pnlnhap;
    private javax.swing.JPanel Pnlnhap1;
    private javax.swing.JFrame WebcamQRcode;
    private javax.swing.JButton btnDangNhap;
    private javax.swing.JButton btndoimk;
    private javax.swing.JDialog doimkJDialog;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JSeparator jSeparator8;
    private javax.swing.JLabel lblExit;
    private javax.swing.JLabel lblloginwwithQR;
    private javax.swing.JLabel lbllogo;
    private javax.swing.JLabel lblquaylaidangnhap;
    private javax.swing.JLabel lblquenmk;
    private javax.swing.JLabel lbltieude;
    private javax.swing.JPanel panelquetQR;
    private javax.swing.JPanel panelquetqr;
    private javax.swing.JLabel pn1;
    private javax.swing.JLabel pn2;
    private javax.swing.JLabel pn3;
    private javax.swing.JLabel pn4;
    private javax.swing.JPanel pnlTong;
    private javax.swing.JPanel pnlTong1;
    private javax.swing.JPanel pnldieukhien;
    private javax.swing.JPanel pnldieukhien1;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JPasswordField txtMatKhau;
    private javax.swing.JTextField txtOTP;
    private javax.swing.JTextField txtQRcode;
    private javax.swing.JPasswordField txtmknew;
    private javax.swing.JTextField txttaikhoanlaymk;
    private javax.swing.JPasswordField txtxnmknew;
    private javax.swing.JLabel welcom;
    private javax.swing.JDialog welcomeJDialog;
    // End of variables declaration//GEN-END:variables
    MP3Player Ping3 = new MP3Player(new File("src\\com\\farmsys\\icons\\UI.mp3"));
    private WebcamPanel panel = null;
    private Webcam webcam = null;

    String QRcoderandomString;

    private static final long serialVersionUID = 6441489157408381878L;
    private final Executor executor = Executors.newSingleThreadExecutor(this);

    private void init() {
        setLocationRelativeTo(null);
        txtxnmknew.setEnabled(true);
        txtmknew.setEnabled(true);
        doimkJDialog.setLocationRelativeTo(this);
        this.WebcamQRcode.setLocationRelativeTo(null);
    }

    void update() {
        String nv = txtQRcode.getText();

        try {
            this.createQRcode();
            dao.updateQRcode(nv);

        } catch (Exception e) {

            System.out.println(e);
        }

    }

    private void createQRcode() {
        try {
            String qrCodeData = QRcoderandomString;
            String filePath = "src\\QRcode\\a.png";
            String charset = "UTF-8"; // or "ISO-8859-1"
            Map< EncodeHintType, ErrorCorrectionLevel> hintMap = new HashMap< EncodeHintType, ErrorCorrectionLevel>();
            hintMap.put(EncodeHintType.ERROR_CORRECTION, ErrorCorrectionLevel.L);
            BitMatrix matrix = new MultiFormatWriter().encode(
                    new String(qrCodeData.getBytes(charset), charset),
                    BarcodeFormat.QR_CODE, 200, 200, hintMap);
            MatrixToImageWriter.writeToFile(matrix, filePath.substring(filePath
                    .lastIndexOf('.') + 1), new File(filePath));
            System.out.println("QR Code image created successfully!");
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    void Sendmail() {
        try {
            manv = txtQRcode.getText();
            NhanVien nhanVien = dao.selectByQR(manv);
            if (nhanVien != null) {//check tk có tồn tại không
                emailNV = dao.selectByQR(manv).getEmail();//check mail nv
                if (emailNV == null) {
                    MsgBox.alert(this, "Tài khoản này chưa có email");
                } else {//tài khoản có mail --> gửi mail -->check otp
                    this.sendQRcode(emailNV);

                }
            } else {
                MsgBox.alert(this, "Tài khoản không tồn tại");
            }
        } catch (Exception e) {
        }
    }

    void SendOTP() {
        try {
            manvotp = txttaikhoanlaymk.getText();
            NhanVien nhanVien = dao.selectById(manvotp);
            if (nhanVien != null) {//check tk có tồn tại không
                emailNV = dao.selectById(manvotp).getEmail();//check mail nv
                if (emailNV == null) {
                    MsgBox.alert(this, "Tài khoản này chưa có email");
                } else {//tài khoản có mail --> gửi mail -->check otp
                    this.sendOTP(emailNV);
                }
            } else {
                MsgBox.alert(this, "Tài khoản không tồn tại");
            }
        } catch (Exception e) {
        }
    }

    void dangNhap() {
        try {
            String taikhoan = txtMaNV.getText().trim();
            String matKhau = new String(txtMatKhau.getPassword());
            String QRcode = txtQRcode.getText().trim();
            NhanVien nhanVien = dao.selectById(taikhoan);
            NhanVien nhanVienEM = dao.selectByEmail(taikhoan);
            NhanVien nhanvienQRcode = dao.selectByQRcodeFormNV(QRcode);
            if (nhanVien == null) {
                if (nhanVienEM == null) {
                    if (nhanvienQRcode == null) {
                        MsgBox.alert(this, "Sai tên đăng nhập hoặc Email!");
                    } else if (!QRcode.equals(nhanvienQRcode.getQRcodeString())) {

                    } else {
                        Auth.user = nhanvienQRcode;
                        initWebcam(false);
                        this.WebcamQRcode.dispose();
                        this.dispose();
                    }

                } else if (!matKhau.equals(nhanVienEM.getMatKhau())) {

                } else {
                    Auth.user = nhanVienEM;
                    initWebcam(false);
                    this.WebcamQRcode.dispose();
                    this.dispose();
                }
            } else if (!matKhau.equals(nhanVien.getMatKhau())) {
                MsgBox.alert(this, "Sai mật khẩu!");
            } else {
                Auth.user = nhanVien;
                this.dispose();
                initWebcam(false);
                this.WebcamQRcode.dispose();

            }

        } catch (Exception e) {

        }

    }

    void ketThuc() {
        if (MsgBox.confirm(this, "Bạn muốn kết thúc ứng dụng?")) {
            System.exit(0);
        }
    }

    public static String HienThi() {
        return Auth.user.getHoTen() + (Auth.user.isVaiTro() ? " - Trưởng phòng" : " - Nhân viên");
    }

    public static String HienThiTen() {
        return Auth.user.getMaNV();
    }

    private void randomString() {
        OTP = UUID.randomUUID().toString();
        QRcoderandomString = UUID.randomUUID().toString();
        txtQRcode.setText(QRcoderandomString);
    }

    private void sendQRcode(String manv) {
        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(accountName, accountPassword);
                }
            });

            String from = accountName;
            String to = manv;
            String subject = "QR code";
            this.randomString();
            String body = "Đây là mã QR code cá nhân. Vui lòng không để cho người khác có được mã này !";

            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject);
            msg.setText(body);
            msg.setSentDate(new Date());

            MimeMultipart multipart = new MimeMultipart();

            MimeBodyPart messageBodyPart = new MimeBodyPart();
            messageBodyPart.setText(body);

            MimeBodyPart attachment = new MimeBodyPart();
            attachment.attachFile(new File("src\\QRcode\\a.png"));

            multipart.addBodyPart(messageBodyPart);
            multipart.addBodyPart(attachment);

            msg.setContent(multipart);
            Transport.send(msg);

            this.clearForm();
        } catch (MessagingException ex) {
            System.out.println(ex);
        } catch (IOException ex) {
            Logger.getLogger(NhanVienPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void sendOTP(String email) {
        try {
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                @Override
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(accountName, accountPassword);
                }
            });
            String from = accountName;
            String to = email;
            String subject = "OTP - Quên mật khẩu";
            this.randomString();
            String body = "Mã OTP: " + OTP;

            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(to));
            msg.setSubject(subject);
            msg.setText(body);
            msg.setSentDate(new Date());

            Transport.send(msg);
            MsgBox.alert(this, "Một email chứa mã OTP đã gửi vào email của bạn!");

        } catch (MessagingException ex) {
            System.out.println(ex);
        }
    }

    private void doiMatKhau(String manv) {
        String matKhauMoi1 = new String(txtmknew.getPassword());
        String matKhauMoi2 = new String(txtxnmknew.getPassword());
        if (!matKhauMoi1.equals(matKhauMoi2)) {
            MsgBox.alert(this, "Xác nhận mật khẩu không đúng!");
            this.clearForm();
        } else {
            tempOTP = txtOTP.getText();
            if (tempOTP.equals(OTP)) {//đúng OTP thì hiện form đổi mk
                nv.setMatKhau(matKhauMoi1);
                nv.setMaNV(manv);
                dao.resetPass(nv);
                MsgBox.alert(this, "Đổi mật khẩu thành công!");
            } else {
                MsgBox.alert(this, "Bạn nhập sai OTP");
                txtMaNV.setText("");
                txtOTP.setText("");
                txtmknew.setText("");
                txtxnmknew.setText("");
            }

        }
    }

    private void Closelogin() {
        System.exit(0);
    }

    private void clearForm() {
        txtmknew.setText("");
        txtxnmknew.setText("");
    }

    private void initWebcam(boolean webcamtruefalse) {
        if (webcamtruefalse == true) {
            Dimension size = WebcamResolution.QVGA.getSize();
            webcam = Webcam.getWebcams().get(0); //0 is default webcam
            webcam.setViewSize(size);

            panel = new WebcamPanel(webcam);
            panel.setPreferredSize(size);
            panel.setFPSDisplayed(true);

            panelquetqr.add(panel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 470, 300));

            executor.execute(this);
        } else {
            webcam.close();
            WebcamQRcode.setVisible(false);
        }

    }

    @Override
    public void run() {
        do {
            try {
                Thread.sleep(100);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;

            if (webcam.isOpen()) {
                if ((image = webcam.getImage()) == null) {
                    continue;
                }
            }

            LuminanceSource source = new BufferedImageLuminanceSource(image);
            BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

            try {
                result = new MultiFormatReader().decode(bitmap);
            } catch (NotFoundException e) {
                //No result...
            }

            if (result != null) {
//                txtMaNV.setText(result.getText());
                txtQRcode.setText(result.getText());
//                txtMaNV.setText("trung");
//                txtMatKhau.setText("240102");

                this.dangNhap();
//                randomString();
//                createQRcode();
//                update();
//                this.Sendmail();

            }
        } while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
        Thread t = new Thread(r, "My Thread");
        t.setDaemon(true);
        return t;
    }
}
